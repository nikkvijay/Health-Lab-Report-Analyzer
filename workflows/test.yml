name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: HLRA-frontend/package-lock.json
    
    - name: Install frontend dependencies
      working-directory: ./HLRA-frontend
      run: npm ci
    
    - name: Run frontend linting
      working-directory: ./HLRA-frontend
      run: npm run lint
    
    - name: Run frontend type checking
      working-directory: ./HLRA-frontend
      run: npx tsc --noEmit
    
    - name: Run frontend tests
      working-directory: ./HLRA-frontend
      run: npm run test:run
    
    - name: Build frontend
      working-directory: ./HLRA-frontend
      run: npm run build

  backend-tests:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:7.0
        env:
          MONGO_INITDB_ROOT_USERNAME: test
          MONGO_INITDB_ROOT_PASSWORD: test
        ports:
          - 27017:27017
        options: >-
          --health-cmd mongosh
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: HLRA-backend/requirements.txt
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y tesseract-ocr poppler-utils
    
    - name: Install backend dependencies
      working-directory: ./HLRA-backend
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run backend linting (if available)
      working-directory: ./HLRA-backend
      run: |
        if [ -f "requirements-dev.txt" ]; then
          pip install -r requirements-dev.txt
          flake8 app/ --max-line-length=100 --ignore=E203,W503 || true
        fi
    
    - name: Run backend tests
      working-directory: ./HLRA-backend
      env:
        MONGODB_URL: mongodb://test:test@localhost:27017/hlra_test?authSource=admin
        SECRET_KEY: test-secret-key-for-ci
        ACCESS_TOKEN_EXPIRE_MINUTES: 30
        REFRESH_TOKEN_EXPIRE_DAYS: 7
      run: |
        pytest tests/ -v --tb=short
    
    - name: Upload test coverage
      if: success()
      working-directory: ./HLRA-backend
      run: |
        if [ -d "htmlcov" ]; then
          echo "Coverage report generated"
        fi

  e2e-tests:
    runs-on: ubuntu-latest
    needs: [frontend-tests, backend-tests]
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: HLRA-frontend/package-lock.json
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        cache-dependency-path: HLRA-backend/requirements.txt
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y tesseract-ocr poppler-utils
    
    - name: Install dependencies
      run: |
        cd HLRA-frontend && npm ci
        cd ../HLRA-backend && pip install -r requirements.txt
    
    - name: Start backend server
      working-directory: ./HLRA-backend
      env:
        MONGODB_URL: mongodb://localhost:27017/hlra_test
        SECRET_KEY: test-secret-key-for-e2e
      run: |
        uvicorn app.main:app --host 0.0.0.0 --port 8000 &
        sleep 10
    
    - name: Start frontend server
      working-directory: ./HLRA-frontend
      run: |
        npm run build
        npm run preview -- --host 0.0.0.0 --port 3000 &
        sleep 10
    
    - name: Run E2E tests (if available)
      run: |
        echo "E2E tests would run here"
        # If you add Playwright or Cypress later, uncomment:
        # cd HLRA-frontend && npx playwright test